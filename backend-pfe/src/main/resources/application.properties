# ??????????????????????????????
# Nom de l?application
spring.application.name = pfe

# ??????????????????????????????
# Datasource Oracle
spring.datasource.url=jdbc:oracle:thin:@localhost:1521/orclpdb
spring.datasource.username=spring_user
spring.datasource.password=spring_pass
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Hibernate / JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect

# ??????????????????????????????
# Seuil pour déterminer UP / DOWN (en heures)
# Injecté dans FluxService via @Value("${flux.status.threshold.hours}")
flux.status.threshold.hours=24

# ??????????????????????????????
# Scheduling (pour activer et tuner tes @Scheduled)
# Par défaut Spring Boot active le scheduling si tu mets @EnableScheduling
spring.task.scheduling.pool.size=5
spring.task.scheduling.shutdown.await-termination=true
spring.task.scheduling.shutdown.await-termination-period=30s

# ??????????????????????????????
# Paramètres FTP (à externaliser ou à surcharger par profile)
ftp.host=ftp.monserveur.com
ftp.port=21
ftp.username=mon_user_ftp
ftp.password=mon_pass_ftp
ftp.remote-dir=/logs

# ??????????????????????????????
# Sécurité JWT
# Ces propriétés te serviront dans ta config Spring Security
jwt.secret=${JWT_SECRET:ChangeThisSecretKeyForProduction}
jwt.expiration-ms=3600000  # 1 heure

# ??????????????????????????????
# Logging


# ??????????????????????????????
# H2 console (uniquement en dev)
# Passe en profile dev pour ne pas exposer H2 en prod
spring.profiles.active=dev
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

logging.level.org.springframework.security=DEBUG
# Si tu utilises Oracle en prod, crée un fichier application-prod.properties
# sans la section H2 et avec spring.profiles.active=prod

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.springframework.jdbc.core=DEBUG